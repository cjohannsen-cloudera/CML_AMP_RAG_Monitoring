// Code generated by go-swagger; DO NOT EDIT.

package runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	lswagger "github.infra.cloudera.com/CAI/AmpRagMonitoring/pkg/swagger"

	strfmt "github.com/go-openapi/strfmt"

	"github.infra.cloudera.com/CAI/AmpRagMonitoring/models"
)

// PostRunsListReader is a Reader for the PostRunsList structure.
type PostRunsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRunsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRunsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRunsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRunsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostRunsListOK creates a PostRunsListOK with default headers values
func NewPostRunsListOK() *PostRunsListOK {
	return &PostRunsListOK{}
}

/*
PostRunsListOK handles this case with default header values.

success
*/
type PostRunsListOK struct {
	Payload []*models.ExperimentRun
}

// Code gets the status code for the post runs list o k response
func (o *PostRunsListOK) Code() int {
	return 200
}

func (o *PostRunsListOK) Error() string {
	return fmt.Sprintf("[POST /runs/list][%d] postRunsListOK  %+v", 200, o.Payload)
}

func (o *PostRunsListOK) GetPayload() []*models.ExperimentRun {
	return o.Payload
}

func (o *PostRunsListOK) GetSerializedPayload() ([]byte, error) {
	return json.Marshal(o.Payload)
}

var _ lswagger.SwaggerResponse = &PostRunsListOK{}

func (o *PostRunsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRunsListBadRequest creates a PostRunsListBadRequest with default headers values
func NewPostRunsListBadRequest() *PostRunsListBadRequest {
	return &PostRunsListBadRequest{}
}

/*
PostRunsListBadRequest handles this case with default header values.

bad request
*/
type PostRunsListBadRequest struct {
}

// Code gets the status code for the post runs list bad request response
func (o *PostRunsListBadRequest) Code() int {
	return 400
}

func (o *PostRunsListBadRequest) Error() string {
	return fmt.Sprintf("[POST /runs/list][%d] postRunsListBadRequest ", 400)
}

func (o *PostRunsListBadRequest) GetSerializedPayload() ([]byte, error) {
	return nil, nil
}

var _ lswagger.SwaggerResponse = &PostRunsListBadRequest{}

func (o *PostRunsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRunsListInternalServerError creates a PostRunsListInternalServerError with default headers values
func NewPostRunsListInternalServerError() *PostRunsListInternalServerError {
	return &PostRunsListInternalServerError{}
}

/*
PostRunsListInternalServerError handles this case with default header values.

internal service error
*/
type PostRunsListInternalServerError struct {
}

// Code gets the status code for the post runs list internal server error response
func (o *PostRunsListInternalServerError) Code() int {
	return 500
}

func (o *PostRunsListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /runs/list][%d] postRunsListInternalServerError ", 500)
}

func (o *PostRunsListInternalServerError) GetSerializedPayload() ([]byte, error) {
	return nil, nil
}

var _ lswagger.SwaggerResponse = &PostRunsListInternalServerError{}

func (o *PostRunsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
