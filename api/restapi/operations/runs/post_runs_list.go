// Code generated by go-swagger; DO NOT EDIT.

package runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostRunsListHandlerFunc turns a function with the right signature into a post runs list handler
type PostRunsListHandlerFunc func(PostRunsListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostRunsListHandlerFunc) Handle(params PostRunsListParams) middleware.Responder {
	return fn(params)
}

// PostRunsListHandler interface for that can handle valid post runs list params
type PostRunsListHandler interface {
	Handle(PostRunsListParams) middleware.Responder
}

// NewPostRunsList creates a new http.Handler for the post runs list operation
func NewPostRunsList(ctx *middleware.Context, handler PostRunsListHandler) *PostRunsList {
	return &PostRunsList{Context: ctx, Handler: handler}
}

/*
	PostRunsList swagger:route POST /runs/list runs postRunsList

Get a list of monitored experiment runs for an experiment.

Get a list monitored experiment runs for an experiment.
*/
type PostRunsList struct {
	Context *middleware.Context
	Handler PostRunsListHandler
}

func (o *PostRunsList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostRunsListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
